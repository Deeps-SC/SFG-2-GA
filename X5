import xml.etree.ElementTree as ET
import xmltodict
import json

def strip_namespace_and_clean(xml_string):
    import re
    # Remove XML declaration
    xml_string = re.sub(r'<\?xml.*?\?>', '', xml_string)

    # Remove namespaces
    xml_string = re.sub(r'\sxmlns(:\w+)?="[^"]+"', '', xml_string)
    xml_string = re.sub(r'\s+xmlns:xsi="[^"]+"', '', xml_string)

    # Remove xsi:type if present
    xml_string = re.sub(r'\s+xsi:type="[^"]+"', '', xml_string)

    return xml_string

def parse_embedded_xml_to_dict(xml_fragment):
    try:
        return xmltodict.parse(xml_fragment)
    except Exception:
        return xml_fragment  # Return as is if not valid XML

def convert_schedules_xml_to_dict(xml_path, output_json_path):
    with open(xml_path, 'r', encoding='utf-8') as f:
        raw_xml = f.read()

    cleaned_xml = strip_namespace_and_clean(raw_xml)
    schedules_dict = xmltodict.parse(cleaned_xml)

    schedules = schedules_dict.get("SI_RESOURCES", {}).get("SCHEDULES", {}).get("SCHEDULE", [])

    if not isinstance(schedules, list):
        schedules = [schedules]

    for schedule in schedules:
        if "SCHEDULE_PARAMS" in schedule:
            schedule["SCHEDULE_PARAMS"] = parse_embedded_xml_to_dict(schedule["SCHEDULE_PARAMS"])
        if "SCHEDULE_TIMINGXML" in schedule:
            schedule["SCHEDULE_TIMINGXML"] = parse_embedded_xml_to_dict(schedule["SCHEDULE_TIMINGXML"])

    with open(output_json_path, "w", encoding="utf-8") as f:
        json.dump(schedules_dict, f, indent=2)

    print(f"Converted and saved to {output_json_path}")
